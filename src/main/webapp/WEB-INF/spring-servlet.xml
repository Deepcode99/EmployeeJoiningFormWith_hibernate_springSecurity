<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context.xsd  
        http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx.xsd  
        http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc.xsd 
         http://www.springframework.org/schema/security
 http://www.springframework.org/schema/security/spring-security.xsd">



	<!-- spring security configuration -->
	<context:component-scan
		base-package="com.adjecti.spring.admin.controller" />
	<mvc:annotation-driven />
<mvc:resources mapping="/images/**" location="/images/" /> 

	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/"
			access="permitAll" />
		<security:intercept-url pattern="/admin/**"
			access="hasRole('ADMIN')" />
		<security:intercept-url pattern="/user/**"
			access="hasRole('USER')" />

		<security:form-login login-page="/"
			authentication-failure-url="/error" username-parameter="username"
			password-parameter="password"  always-use-default-target="true"
			default-target-url="/success" />
		<security:csrf />
	</security:http>



	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="userDetailsServiceImple">
			<security:password-encoder
				ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>


	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.NoOpPasswordEncoder"
		factory-method="getInstance" />

	<mvc:resources location="/WEB-INF/static/"
		mapping="/static/**"></mvc:resources>
	<tx:annotation-driven />

	<bean name="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- Configuring the multipartResolver -->
	<bean name="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		  <property name="maxUploadSize" value="20848820" />
	</bean>

	<!-- Hibernate configuration -->
	<bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="com.mysql.cj.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/EmployeeJForm" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>


	<!-- Configuring the Hibernate5 Session Factory Bean -->
	<bean name="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL57Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">true</prop>
				
			</props>
		</property>

		<property name="annotatedClasses">
			<list>
				<value>com.adjecti.spring.admin.entity.Employee</value>
				<value>com.adjecti.spring.employee.entity.PersonalDetails</value>         
				<value> com.adjecti.spring.employee.entity.EducationDetails</value>
			
				<value>
					com.adjecti.spring.admin.entity.User
				</value>
				<value>
					com.adjecti.spring.admin.entity.UserRole
				</value>

			</list>
		</property>
	</bean>

	<bean name="hibernateTemplate"
		class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean name="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


	<bean id="userRepo"
		class="com.adjecti.spring.admin.dao.UserRepositoryImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>


	<bean id="userDetailsServiceImple"
		class="com.adjecti.spring.admin.service.UserDetailsServiceImple">
		<property name="userRepo" ref="userRepo"></property>
	</bean>

	<bean id="employeeDao"
		class="com.adjecti.spring.admin.dao.EmployeeRegistrationDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>

	<bean id="employeeService"
		class="com.adjecti.spring.admin.service.EmployeeRegistrationServiceImple">
		<property name="employeeDao" ref="employeeDao"></property>
	</bean>

<!-- personalDetails dao and service class beans  -->
	
	<bean id="personalDetailsDao"
		class="com.adjecti.spring.employee.dao.PersonalDetailsImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>

	<bean id="personalDetailsService"
		class="com.adjecti.spring.employee.service.PersonalDetailsServiceImpl">
		<property name="personalDetailsDao" ref="personalDetailsDao"></property>
	</bean>

<!-- EducationDetails dao and service class beans  -->

	<bean id="educationDetailsDao"
		class="com.adjecti.spring.employee.dao.EducationDetailsImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>

<bean id="educationdetailsService"
		class="com.adjecti.spring.employee.service.EducationDetailsServiceImpl">
		<property name="educationDetailsDao" ref="educationDetailsDao"></property>
	</bean>


</beans>